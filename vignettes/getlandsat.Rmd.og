---
title: "Introduction to getlandsat"
author: "Scott Chamberlain"
date: "`r Sys.Date()`"
output:
  html_document:
    toc: true
    toc_float: true
    theme: readable
vignette: >
  %\VignetteIndexEntry{getlandsat introduction}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r echo=FALSE}
knitr::opts_chunk$set(
  comment = "#>",
  collapse = TRUE,
  warning = FALSE,
  message = FALSE,
  fig.path = "img/"
)
```

getlandsat introduction
=======================

`getlandsat` provides access to Landsat <https://landsat.usgs.gov> 8 metadata and images hosted on AWS S3 at <https://aws.amazon.com/public-data-sets/landsat>. The package only fetches data. It does not attempt to aid users in downstream usage, but some additional functionality may be added.

Potential users are probably anyone from scientists asking questions about biodiversity or land use change, to software developers creating tools for users to vizualize their data.

## Install

Dev version

```{r eval=FALSE}
remotes::install_github("ropensci/getlandsat")
```

```{r}
library("getlandsat")
```

```{r echo=FALSE}
lsat_cache_delete_all()
```


## List scenes

```{r}
(res <- lsat_scenes(n_max = 10))
```

## List scene files

```{r}
lsat_scene_files(x = res$download_url[1])
```

## Get an image

Returns path to the image

```{r}
lsat_image(x = "LC80101172015002LGN00_B5.TIF")
```

Another one

```{r}
lsat_image("LC80010032014272LGN00_B10.TIF")
```

### Caching

When requesting an image, we first check if you already have that image. If you do, 
we return the path to the file. If not, we get the image, and return the file path.

```{r message=TRUE}
lsat_image(x = "LC80101172015002LGN00_B5.TIF")
```

Note the message given.

See `?lsat_cache` for cache management functions.

## Visualize

```{r}
library("raster")
x <- lsat_cache_details()
img <- raster(x[[1]]$file)
plot(img)
```
